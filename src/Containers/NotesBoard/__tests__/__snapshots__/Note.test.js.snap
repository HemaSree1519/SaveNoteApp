exports[`EditNote should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Note
    note={
        Object {
            "content": "Content here",
            "createdAt": "2019-05-12T13:20:40.735Z",
            "email": "test@gmail.com",
            "id": 2,
            "title": "test",
            "updatedAt": "2019-05-12T13:20:40.735Z",
          }
    }
    setEditState={[Function]} />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <CardBody
        tag="div">
        <CardTitle
                className="card-title"
                tag="div">
                test
        </CardTitle>
        <CardText
                tag="p">
                Content here
        </CardText>
</CardBody>,
      "name": "card",
      "onClick": [Function],
      "tag": "div",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <CardTitle
            className="card-title"
            tag="div">
            test
</CardTitle>,
          <CardText
            tag="p">
            Content here
</CardText>,
        ],
        "tag": "div",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "test",
            "className": "card-title",
            "tag": "div",
          },
          "ref": null,
          "rendered": "test",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Content here",
            "tag": "p",
          },
          "ref": null,
          "rendered": "Content here",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <CardBody
          tag="div">
          <CardTitle
                    className="card-title"
                    tag="div">
                    test
          </CardTitle>
          <CardText
                    tag="p">
                    Content here
          </CardText>
</CardBody>,
        "name": "card",
        "onClick": [Function],
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <CardTitle
              className="card-title"
              tag="div">
              test
</CardTitle>,
            <CardText
              tag="p">
              Content here
</CardText>,
          ],
          "tag": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "test",
              "className": "card-title",
              "tag": "div",
            },
            "ref": null,
            "rendered": "test",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Content here",
              "tag": "p",
            },
            "ref": null,
            "rendered": "Content here",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
