exports[`EditNote should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WriteNote
    childProps={
        Object {
            "onCloseNewNote": [Function],
            "onWriteNoteContent": [Function],
            "onWriteNoteTitle": [Function],
            "writingNoteContent": "",
            "writingNoteTitle": "",
          }
    } />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Input
          className="note-card-title-input"
          name="title"
          onChange={[Function]}
          placeholder="Title"
          type="text"
          value="" />,
        <Input
          className="note-card-content-input"
          name="content"
          onChange={[Function]}
          placeholder="Write a note..."
          type="textarea"
          value="" />,
        <div
          className="footer-container">
          <Button
                    className="footer-button"
                    color="secondary"
                    name="close"
                    onClick={[Function]}
                    tag="button">
                    Close
          </Button>
</div>,
      ],
      "className": "note-input",
      "tag": "div",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "note-card-title-input",
          "name": "title",
          "onChange": [Function],
          "placeholder": "Title",
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "note-card-content-input",
          "name": "content",
          "onChange": [Function],
          "placeholder": "Write a note...",
          "type": "textarea",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Button
            className="footer-button"
            color="secondary"
            name="close"
            onClick={[Function]}
            tag="button">
            Close
</Button>,
          "className": "footer-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Close",
            "className": "footer-button",
            "color": "secondary",
            "name": "close",
            "onClick": [Function],
            "tag": "button",
          },
          "ref": null,
          "rendered": "Close",
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Input
            className="note-card-title-input"
            name="title"
            onChange={[Function]}
            placeholder="Title"
            type="text"
            value="" />,
          <Input
            className="note-card-content-input"
            name="content"
            onChange={[Function]}
            placeholder="Write a note..."
            type="textarea"
            value="" />,
          <div
            className="footer-container">
            <Button
                        className="footer-button"
                        color="secondary"
                        name="close"
                        onClick={[Function]}
                        tag="button">
                        Close
            </Button>
</div>,
        ],
        "className": "note-input",
        "tag": "div",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "note-card-title-input",
            "name": "title",
            "onChange": [Function],
            "placeholder": "Title",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "note-card-content-input",
            "name": "content",
            "onChange": [Function],
            "placeholder": "Write a note...",
            "type": "textarea",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Button
              className="footer-button"
              color="secondary"
              name="close"
              onClick={[Function]}
              tag="button">
              Close
</Button>,
            "className": "footer-container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Close",
              "className": "footer-button",
              "color": "secondary",
              "name": "close",
              "onClick": [Function],
              "tag": "button",
            },
            "ref": null,
            "rendered": "Close",
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
