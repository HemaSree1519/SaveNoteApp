exports[`NotesBoard should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Index />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="write-note">
          <Input
                    className="note-input"
                    onClick={[Function]}
                    placeholder="Write a note..."
                    type="text" />
</div>,
        <div>
          <i>
                    Get your note saved with Save Note app
          </i>
          <Modal
                    autoFocus={true}
                    backdrop={true}
                    backdropTransition={
                              Object {
                                        "mountOnEnter": true,
                                        "timeout": 150,
                                      }
                    }
                    centered={false}
                    fade={true}
                    isOpen={false}
                    keyboard={true}
                    modalTransition={
                              Object {
                                        "timeout": 300,
                                      }
                    }
                    onClosed={[Function]}
                    onOpened={[Function]}
                    returnFocusAfterClose={true}
                    role="dialog"
                    scrollable={false}
                    toggle={[Function]}
                    unmountOnClose={true}
                    zIndex={1050}>
                    <ModalHeader
                              charCode={215}
                              closeAriaLabel="Close"
                              tag="h5"
                              wrapTag="div">
                              <Input
                                        className="note-card-title-input"
                                        onChange={[Function]}
                                        type="textarea"
                                        value="" />
                    </ModalHeader>
                    <ModalBody
                              tag="div">
                              <Input
                                        className="note-card-content-input"
                                        onChange={[Function]}
                                        rows={5}
                                        type="textarea"
                                        value="" />
                              <br />
                              <div
                                        className="footer-container">
                                        <Label
                                                  className="footer-edited-time"
                                                  tag="label"
                                                  widths={
                                                            Array [
                                                                      "xs",
                                                                      "sm",
                                                                      "md",
                                                                      "lg",
                                                                      "xl",
                                                                    ]
                                                  }>
                                                  Edited 
                                                  May 12, 2019 8:40 AM
                                        </Label>
                              </div>
                    </ModalBody>
                    <ModalFooter
                              className="modal-footer"
                              tag="div">
                              <Button
                                        className="footer-button"
                                        color="secondary"
                                        onClick={[Function]}
                                        tag="button">
                                        Delete
                              </Button>
                                
                              <Button
                                        className="footer-button"
                                        color="secondary"
                                        onClick={[Function]}
                                        tag="button">
                                        Close
                              </Button>
                    </ModalFooter>
          </Modal>
</div>,
      ],
      "className": "dash-board",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Input
            className="note-input"
            onClick={[Function]}
            placeholder="Write a note..."
            type="text" />,
          "className": "write-note",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "note-input",
            "onClick": [Function],
            "placeholder": "Write a note...",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <i>
              Get your note saved with Save Note app
</i>,
            <Modal
              autoFocus={true}
              backdrop={true}
              backdropTransition={
                            Object {
                                          "mountOnEnter": true,
                                          "timeout": 150,
                                        }
              }
              centered={false}
              fade={true}
              isOpen={false}
              keyboard={true}
              modalTransition={
                            Object {
                                          "timeout": 300,
                                        }
              }
              onClosed={[Function]}
              onOpened={[Function]}
              returnFocusAfterClose={true}
              role="dialog"
              scrollable={false}
              toggle={[Function]}
              unmountOnClose={true}
              zIndex={1050}>
              <ModalHeader
                            charCode={215}
                            closeAriaLabel="Close"
                            tag="h5"
                            wrapTag="div">
                            <Input
                                          className="note-card-title-input"
                                          onChange={[Function]}
                                          type="textarea"
                                          value="" />
              </ModalHeader>
              <ModalBody
                            tag="div">
                            <Input
                                          className="note-card-content-input"
                                          onChange={[Function]}
                                          rows={5}
                                          type="textarea"
                                          value="" />
                            <br />
                            <div
                                          className="footer-container">
                                          <Label
                                                        className="footer-edited-time"
                                                        tag="label"
                                                        widths={
                                                                      Array [
                                                                                    "xs",
                                                                                    "sm",
                                                                                    "md",
                                                                                    "lg",
                                                                                    "xl",
                                                                                  ]
                                                        }>
                                                        Edited 
                                                        May 12, 2019 8:40 AM
                                          </Label>
                            </div>
              </ModalBody>
              <ModalFooter
                            className="modal-footer"
                            tag="div">
                            <Button
                                          className="footer-button"
                                          color="secondary"
                                          onClick={[Function]}
                                          tag="button">
                                          Delete
                            </Button>
                              
                            <Button
                                          className="footer-button"
                                          color="secondary"
                                          onClick={[Function]}
                                          tag="button">
                                          Close
                            </Button>
              </ModalFooter>
</Modal>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Get your note saved with Save Note app",
            },
            "ref": null,
            "rendered": "Get your note saved with Save Note app",
            "type": "i",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "autoFocus": true,
              "backdrop": true,
              "backdropTransition": Object {
                "mountOnEnter": true,
                "timeout": 150,
              },
              "centered": false,
              "children": Array [
                <ModalHeader
                  charCode={215}
                  closeAriaLabel="Close"
                  tag="h5"
                  wrapTag="div">
                  <Input
                                    className="note-card-title-input"
                                    onChange={[Function]}
                                    type="textarea"
                                    value="" />
</ModalHeader>,
                <ModalBody
                  tag="div">
                  <Input
                                    className="note-card-content-input"
                                    onChange={[Function]}
                                    rows={5}
                                    type="textarea"
                                    value="" />
                  <br />
                  <div
                                    className="footer-container">
                                    <Label
                                                      className="footer-edited-time"
                                                      tag="label"
                                                      widths={
                                                                        Array [
                                                                                          "xs",
                                                                                          "sm",
                                                                                          "md",
                                                                                          "lg",
                                                                                          "xl",
                                                                                        ]
                                                      }>
                                                      Edited 
                                                      May 12, 2019 8:40 AM
                                    </Label>
                  </div>
</ModalBody>,
                <ModalFooter
                  className="modal-footer"
                  tag="div">
                  <Button
                                    className="footer-button"
                                    color="secondary"
                                    onClick={[Function]}
                                    tag="button">
                                    Delete
                  </Button>
                    
                  <Button
                                    className="footer-button"
                                    color="secondary"
                                    onClick={[Function]}
                                    tag="button">
                                    Close
                  </Button>
</ModalFooter>,
              ],
              "fade": true,
              "isOpen": false,
              "keyboard": true,
              "modalTransition": Object {
                "timeout": 300,
              },
              "onClosed": [Function],
              "onOpened": [Function],
              "returnFocusAfterClose": true,
              "role": "dialog",
              "scrollable": false,
              "toggle": [Function],
              "unmountOnClose": true,
              "zIndex": 1050,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "charCode": 215,
                  "children": <Input
                    className="note-card-title-input"
                    onChange={[Function]}
                    type="textarea"
                    value="" />,
                  "closeAriaLabel": "Close",
                  "tag": "h5",
                  "wrapTag": "div",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "note-card-title-input",
                    "onChange": [Function],
                    "type": "textarea",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Input
                      className="note-card-content-input"
                      onChange={[Function]}
                      rows={5}
                      type="textarea"
                      value="" />,
                    <br />,
                    <div
                      className="footer-container">
                      <Label
                                            className="footer-edited-time"
                                            tag="label"
                                            widths={
                                                                  Array [
                                                                                        "xs",
                                                                                        "sm",
                                                                                        "md",
                                                                                        "lg",
                                                                                        "xl",
                                                                                      ]
                                            }>
                                            Edited 
                                            May 12, 2019 8:40 AM
                      </Label>
</div>,
                  ],
                  "tag": "div",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "note-card-content-input",
                      "onChange": [Function],
                      "rows": 5,
                      "type": "textarea",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": "br",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Label
                        className="footer-edited-time"
                        tag="label"
                        widths={
                                                Array [
                                                                        "xs",
                                                                        "sm",
                                                                        "md",
                                                                        "lg",
                                                                        "xl",
                                                                      ]
                        }>
                        Edited 
                        May 12, 2019 8:40 AM
</Label>,
                      "className": "footer-container",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": Array [
                          "Edited ",
                          "May 12, 2019 8:40 AM",
                        ],
                        "className": "footer-edited-time",
                        "tag": "label",
                        "widths": Array [
                          "xs",
                          "sm",
                          "md",
                          "lg",
                          "xl",
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        "Edited ",
                        "May 12, 2019 8:40 AM",
                      ],
                      "type": [Function],
                    },
                    "type": "div",
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Button
                      className="footer-button"
                      color="secondary"
                      onClick={[Function]}
                      tag="button">
                      Delete
</Button>,
                    "  ",
                    <Button
                      className="footer-button"
                      color="secondary"
                      onClick={[Function]}
                      tag="button">
                      Close
</Button>,
                  ],
                  "className": "modal-footer",
                  "tag": "div",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Delete",
                      "className": "footer-button",
                      "color": "secondary",
                      "onClick": [Function],
                      "tag": "button",
                    },
                    "ref": null,
                    "rendered": "Delete",
                    "type": [Function],
                  },
                  "  ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Close",
                      "className": "footer-button",
                      "color": "secondary",
                      "onClick": [Function],
                      "tag": "button",
                    },
                    "ref": null,
                    "rendered": "Close",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="write-note">
            <Input
                        className="note-input"
                        onClick={[Function]}
                        placeholder="Write a note..."
                        type="text" />
</div>,
          <div>
            <i>
                        Get your note saved with Save Note app
            </i>
            <Modal
                        autoFocus={true}
                        backdrop={true}
                        backdropTransition={
                                    Object {
                                                "mountOnEnter": true,
                                                "timeout": 150,
                                              }
                        }
                        centered={false}
                        fade={true}
                        isOpen={false}
                        keyboard={true}
                        modalTransition={
                                    Object {
                                                "timeout": 300,
                                              }
                        }
                        onClosed={[Function]}
                        onOpened={[Function]}
                        returnFocusAfterClose={true}
                        role="dialog"
                        scrollable={false}
                        toggle={[Function]}
                        unmountOnClose={true}
                        zIndex={1050}>
                        <ModalHeader
                                    charCode={215}
                                    closeAriaLabel="Close"
                                    tag="h5"
                                    wrapTag="div">
                                    <Input
                                                className="note-card-title-input"
                                                onChange={[Function]}
                                                type="textarea"
                                                value="" />
                        </ModalHeader>
                        <ModalBody
                                    tag="div">
                                    <Input
                                                className="note-card-content-input"
                                                onChange={[Function]}
                                                rows={5}
                                                type="textarea"
                                                value="" />
                                    <br />
                                    <div
                                                className="footer-container">
                                                <Label
                                                            className="footer-edited-time"
                                                            tag="label"
                                                            widths={
                                                                        Array [
                                                                                    "xs",
                                                                                    "sm",
                                                                                    "md",
                                                                                    "lg",
                                                                                    "xl",
                                                                                  ]
                                                            }>
                                                            Edited 
                                                            May 12, 2019 8:40 AM
                                                </Label>
                                    </div>
                        </ModalBody>
                        <ModalFooter
                                    className="modal-footer"
                                    tag="div">
                                    <Button
                                                className="footer-button"
                                                color="secondary"
                                                onClick={[Function]}
                                                tag="button">
                                                Delete
                                    </Button>
                                      
                                    <Button
                                                className="footer-button"
                                                color="secondary"
                                                onClick={[Function]}
                                                tag="button">
                                                Close
                                    </Button>
                        </ModalFooter>
            </Modal>
</div>,
        ],
        "className": "dash-board",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Input
              className="note-input"
              onClick={[Function]}
              placeholder="Write a note..."
              type="text" />,
            "className": "write-note",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "note-input",
              "onClick": [Function],
              "placeholder": "Write a note...",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <i>
                Get your note saved with Save Note app
</i>,
              <Modal
                autoFocus={true}
                backdrop={true}
                backdropTransition={
                                Object {
                                                "mountOnEnter": true,
                                                "timeout": 150,
                                              }
                }
                centered={false}
                fade={true}
                isOpen={false}
                keyboard={true}
                modalTransition={
                                Object {
                                                "timeout": 300,
                                              }
                }
                onClosed={[Function]}
                onOpened={[Function]}
                returnFocusAfterClose={true}
                role="dialog"
                scrollable={false}
                toggle={[Function]}
                unmountOnClose={true}
                zIndex={1050}>
                <ModalHeader
                                charCode={215}
                                closeAriaLabel="Close"
                                tag="h5"
                                wrapTag="div">
                                <Input
                                                className="note-card-title-input"
                                                onChange={[Function]}
                                                type="textarea"
                                                value="" />
                </ModalHeader>
                <ModalBody
                                tag="div">
                                <Input
                                                className="note-card-content-input"
                                                onChange={[Function]}
                                                rows={5}
                                                type="textarea"
                                                value="" />
                                <br />
                                <div
                                                className="footer-container">
                                                <Label
                                                                className="footer-edited-time"
                                                                tag="label"
                                                                widths={
                                                                                Array [
                                                                                                "xs",
                                                                                                "sm",
                                                                                                "md",
                                                                                                "lg",
                                                                                                "xl",
                                                                                              ]
                                                                }>
                                                                Edited 
                                                                May 12, 2019 8:40 AM
                                                </Label>
                                </div>
                </ModalBody>
                <ModalFooter
                                className="modal-footer"
                                tag="div">
                                <Button
                                                className="footer-button"
                                                color="secondary"
                                                onClick={[Function]}
                                                tag="button">
                                                Delete
                                </Button>
                                  
                                <Button
                                                className="footer-button"
                                                color="secondary"
                                                onClick={[Function]}
                                                tag="button">
                                                Close
                                </Button>
                </ModalFooter>
</Modal>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Get your note saved with Save Note app",
              },
              "ref": null,
              "rendered": "Get your note saved with Save Note app",
              "type": "i",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "autoFocus": true,
                "backdrop": true,
                "backdropTransition": Object {
                  "mountOnEnter": true,
                  "timeout": 150,
                },
                "centered": false,
                "children": Array [
                  <ModalHeader
                    charCode={215}
                    closeAriaLabel="Close"
                    tag="h5"
                    wrapTag="div">
                    <Input
                                        className="note-card-title-input"
                                        onChange={[Function]}
                                        type="textarea"
                                        value="" />
</ModalHeader>,
                  <ModalBody
                    tag="div">
                    <Input
                                        className="note-card-content-input"
                                        onChange={[Function]}
                                        rows={5}
                                        type="textarea"
                                        value="" />
                    <br />
                    <div
                                        className="footer-container">
                                        <Label
                                                            className="footer-edited-time"
                                                            tag="label"
                                                            widths={
                                                                                Array [
                                                                                                    "xs",
                                                                                                    "sm",
                                                                                                    "md",
                                                                                                    "lg",
                                                                                                    "xl",
                                                                                                  ]
                                                            }>
                                                            Edited 
                                                            May 12, 2019 8:40 AM
                                        </Label>
                    </div>
</ModalBody>,
                  <ModalFooter
                    className="modal-footer"
                    tag="div">
                    <Button
                                        className="footer-button"
                                        color="secondary"
                                        onClick={[Function]}
                                        tag="button">
                                        Delete
                    </Button>
                      
                    <Button
                                        className="footer-button"
                                        color="secondary"
                                        onClick={[Function]}
                                        tag="button">
                                        Close
                    </Button>
</ModalFooter>,
                ],
                "fade": true,
                "isOpen": false,
                "keyboard": true,
                "modalTransition": Object {
                  "timeout": 300,
                },
                "onClosed": [Function],
                "onOpened": [Function],
                "returnFocusAfterClose": true,
                "role": "dialog",
                "scrollable": false,
                "toggle": [Function],
                "unmountOnClose": true,
                "zIndex": 1050,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "charCode": 215,
                    "children": <Input
                      className="note-card-title-input"
                      onChange={[Function]}
                      type="textarea"
                      value="" />,
                    "closeAriaLabel": "Close",
                    "tag": "h5",
                    "wrapTag": "div",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "note-card-title-input",
                      "onChange": [Function],
                      "type": "textarea",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <Input
                        className="note-card-content-input"
                        onChange={[Function]}
                        rows={5}
                        type="textarea"
                        value="" />,
                      <br />,
                      <div
                        className="footer-container">
                        <Label
                                                className="footer-edited-time"
                                                tag="label"
                                                widths={
                                                                        Array [
                                                                                                "xs",
                                                                                                "sm",
                                                                                                "md",
                                                                                                "lg",
                                                                                                "xl",
                                                                                              ]
                                                }>
                                                Edited 
                                                May 12, 2019 8:40 AM
                        </Label>
</div>,
                    ],
                    "tag": "div",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": "note-card-content-input",
                        "onChange": [Function],
                        "rows": 5,
                        "type": "textarea",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": "br",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Label
                          className="footer-edited-time"
                          tag="label"
                          widths={
                                                    Array [
                                                                              "xs",
                                                                              "sm",
                                                                              "md",
                                                                              "lg",
                                                                              "xl",
                                                                            ]
                          }>
                          Edited 
                          May 12, 2019 8:40 AM
</Label>,
                        "className": "footer-container",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": Array [
                            "Edited ",
                            "May 12, 2019 8:40 AM",
                          ],
                          "className": "footer-edited-time",
                          "tag": "label",
                          "widths": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          "Edited ",
                          "May 12, 2019 8:40 AM",
                        ],
                        "type": [Function],
                      },
                      "type": "div",
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <Button
                        className="footer-button"
                        color="secondary"
                        onClick={[Function]}
                        tag="button">
                        Delete
</Button>,
                      "  ",
                      <Button
                        className="footer-button"
                        color="secondary"
                        onClick={[Function]}
                        tag="button">
                        Close
</Button>,
                    ],
                    "className": "modal-footer",
                    "tag": "div",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Delete",
                        "className": "footer-button",
                        "color": "secondary",
                        "onClick": [Function],
                        "tag": "button",
                      },
                      "ref": null,
                      "rendered": "Delete",
                      "type": [Function],
                    },
                    "  ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Close",
                        "className": "footer-button",
                        "color": "secondary",
                        "onClick": [Function],
                        "tag": "button",
                      },
                      "ref": null,
                      "rendered": "Close",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
